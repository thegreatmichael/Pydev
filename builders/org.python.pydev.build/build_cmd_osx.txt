#echo Note: instructions for properly updating the variables are in the end of the file
#echo The contents here may just be copied into cmd.exe or some other shell (just note that 
#echo in some cases a call to git may stop executing, so, you may need to copy the commands in chunks). 

export BRANCH="mediacomp"
export BASE_LOCAL_PYDEV_GIT="/Users/tgm/dev/Pydev"
export BUILD_DIR="/Users/tgm/dev/Pydev-build"
export DEPLOY_DIR="/Users/tgm/dev/Pydev-deploy"
export JAVA_HOME=$(/usr/libexec/java_home)
export GIT_EXECUTABLE="/usr/bin/git"
export ECLIPSE_CLEAN="/Users/tgm/dev/eclipse-clean"
export LAUNCHER_PLUGIN="org.eclipse.equinox.launcher_1.2.0.v20110502"
export BUILDER_PLUGIN="org.eclipse.pde.build_3.7.0.v20110512-1320"
export BASEOS="macosx"
export BASEWS="carbon"
export BASEARCH="x86"
export PATH=$ECLIPSE_CLEAN/plugins/org.apache.ant_1.8.2.v20110505-1300:$PATH

mkdir $BUILD_DIR
mkdir $DEPLOY_DIR
cd $BUILD_DIR
git clone $BASE_LOCAL_PYDEV_GIT
cd Pydev
git clean -f -d builders
git clean -f -d features
git clean -f -d I.PyDev
git clean -f -d plugins
git clean -f -d repo
rm *.*
git checkout -f
git checkout $BRANCH
git pull origin $BRANCH
#echo If copied/pasted into cmd.exe, it will break here

cd builders/org.python.pydev.build
ant -DbuildDirectory=$BUILD_DIR/Pydev -Dgit.executable=$GIT_EXECUTABLE -Ddeploy.dir=$DEPLOY_DIR/Pydev -DcleanAfter=false -Dvanilla.eclipse=$ECLIPSE_CLEAN -Dlocal_build=true -Dlauncher.plugin=$LAUNCHER_PLUGIN -Dbuilder.plugin=$BUILDER_PLUGIN -Dbaseos=$BASEOS -Dbasews=$BASEWS -Dbasearch=$BASEARCH






#Notes on customizing parameters / making the build:
#If signing is needed, then the keystore needs to be created before (see commands below)
#and also a variable named STOREPASS must be set with the same password used when the keystore is created
#i.e.: set STOREPASS=my store pass
#
#BRANCH: the branch to be used to do the build (e.g.: master/development/etc) -- it's recommended that you create your own branch from a base branch in pydev and use it
#
#BASE_LOCAL_PYDEV_GIT: The directory where you checked out Pydev from git (the folder containing the 'plugins, features, builders, .git')
#
#BUILD_DIR: The directory that should be created for the build (the contents of the BASE_LOCAL_PYDEV_GIT will be checked out to this directory for the build)
#
#DEPLOY_DIR: The directory where the final artifacts of the build will be put
#
#KEYSTORE: A keystore needs to be created and available at %DEPLOY_DIR%\pydevkeystore
#    
#    %JAVA_HOME%\bin\keytool -genkey -dname "CN=VT Pydev, OU=Pydev, O=VT, L=Blacksburg, ST=Virginia, C=USA" -keystore $DEPLOY_DIR\pydevkeystore -alias pydev -validity 3650
#    %JAVA_HOME%\bin\keytool -selfcert -alias pydev -keystore $DEPLOY_DIR\pydevkeystore -validity 3650
#    %JAVA_HOME%\bin\jarsigner -keystore $DEPLOY_DIR\pydevkeystore -storepass vtmediacomptgm JAR_TO_SIGN pydev
#    
#KEYSTORE_ALIAS: The alias used during the keystore creation
#
#JAVA_HOME: Where is your java located? (The directory containing 'bin, jre, COPYRIGHT, LICENSE') 
#
#GIT_EXECUTABLE: The place where the git executable is located (in Windows your git.exe)
#
#ECLIPSE_CLEAN: The DIRECTORY containing your eclipse executable (note that it should be a clean install of the Eclipse SDK + Aptana Studio 3 plugins) -- it will be copied during the build
#
#LAUNCHER_PLUGIN: The plugin for the equinox launcher at your eclipse version (i.e.: org.eclipse.equinox.launcher_1.1.0.v20100507)
#
#BUILDER_PLUGIN: The plugin for the pde builder at your eclipse version (i.e.: org.eclipse.pde.build_3.6.0.v20100603)
#
#BASEOS: The platform (e.g.: win32, linux, macosx, solaris, etc) 
#
#BASEWS: The windows system (e.g.: win32, gtk, motif, carbon)
#
#BASEARCH: The architechure (e.g.: x86, ppc, sparc)
#
#PATH: python, java, git, ant must be in the path 
#    Additionally for Windows, FastCopy (http://ipmsg.org/tools/fastcopy.html.en) is also required.
#    
#