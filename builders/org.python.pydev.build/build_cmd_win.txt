@echo Note: instructions for properly updating the variables are in the end of the file
@echo The contents here may just be copied into cmd.exe or some other shell (just note that 
@echo in some cases a call to git may stop executing, so, you may need to copy the commands in chunks). 

set BRANCH=development

set BASE_LOCAL_PYDEV_GIT=D:\workspaces\pydev
set BUILD_DIR=W:\git_build_dir
set DEPLOY_DIR=W:\git_deploy_dir
set JAVA_HOME=D:\bin\jdk1.5.0_22
set GIT_EXECUTABLE="d:\bin\git\bin\git.exe"
set ECLIPSE_CLEAN=D:\bin\eclipse_36_final_clean
set LAUNCHER_PLUGIN=org.eclipse.equinox.launcher_1.1.0.v20100507
set BUILDER_PLUGIN=org.eclipse.pde.build_3.6.0.v20100603
set KEYSTORE=%DEPLOY_DIR%\pydevkeystore
set KEYSTORE_ALIAS=aptana

set BASEOS=win32
set BASEWS=win32
set BASEARCH=x86

set PATH=
set PATH=d:\bin\python265;%PATH%
set PATH=D:\bin\FastCopy199r4;%PATH%
set PATH=%JAVA_HOME%\bin;%PATH%
set PATH=d:\bin\git\bin;%PATH%
set PATH=%ECLIPSE_CLEAN%\plugins\org.apache.ant_1.7.1.v20100518-1145\bin;%PATH%


@echo actual build command
mkdir %BUILD_DIR%
mkdir %DEPLOY_DIR%
w:
cd %BUILD_DIR%
git clone %BASE_LOCAL_PYDEV_GIT%
@echo git clone git://github.com/aptana/Pydev.git -- this could be used when building against the base git instead of a local git
cd Pydev
git clean -f -d builders
git clean -f -d features
git clean -f -d I.PyDev
git clean -f -d plugins
git clean -f -d repo
del *.* /Y
git checkout -f
git checkout %BRANCH%
call git pull origin %BRANCH%
@echo If copied/pasted into cmd.exe, it will break here

cd builders\org.python.pydev.build
ant -DbuildDirectory=%BUILD_DIR%\Pydev -Dgit.executable=%GIT_EXECUTABLE% -Ddeploy.dir=%DEPLOY_DIR%\Pydev -DcleanAfter=false -Dvanilla.eclipse=%ECLIPSE_CLEAN% -DSTOREPASS=%STOREPASS% -DKEYSTORE=%KEYSTORE% -Dlocal_build=true -Dlauncher.plugin=%LAUNCHER_PLUGIN% -Dbuilder.plugin=%BUILDER_PLUGIN% -Dbaseos=%BASEOS% -Dbasews=%BASEWS% -Dbasearch=%BASEARCH% -DKEYSTORE_ALIAS=%KEYSTORE_ALIAS% 






Notes on customizing parameters / making the build:
If signing is needed, then the keystore needs to be created before (see commands below)
and also a variable named STOREPASS must be set with the same password used when the keystore is created
i.e.: set STOREPASS=my store pass

BRANCH: the branch to be used to do the build (e.g.: master/development/etc) -- it's recommended that you create your own branch from a base branch in pydev and use it

BASE_LOCAL_PYDEV_GIT: The directory where you checked out Pydev from git (the folder containing the 'plugins, features, builders, .git')

BUILD_DIR: The directory that should be created for the build (the contents of the BASE_LOCAL_PYDEV_GIT will be checked out to this directory for the build)

DEPLOY_DIR: The directory where the final artifacts of the build will be put

KEYSTORE: A keystore needs to be created and available at %DEPLOY_DIR%\pydevkeystore
    
    %JAVA_HOME%\bin\keytool -genkey -dname "CN=Company Pydev, OU=Pydev, O=Company, L=Location, ST=State, C=Country" -keystore %DEPLOY_DIR%\pydevkeystore -alias pydev -validity 3650
    %JAVA_HOME%\bin\keytool -selfcert -alias pydev -keystore %DEPLOY_DIR%\pydevkeystore -validity 3650
    %JAVA_HOME%\bin\jarsigner -keystore %DEPLOY_DIR%\pydevkeystore -storepass PASSUSED JAR_TO_SIGN pydev
    
KEYSTORE_ALIAS: The alias used during the keystore creation

JAVA_HOME: Where is your java located? (The directory containing 'bin, jre, COPYRIGHT, LICENSE') 

GIT_EXECUTABLE: The place where the git executable is located (in Windows your git.exe)

ECLIPSE_CLEAN: The DIRECTORY containing your eclipse executable (note that it should be a clean install of the Eclipse SDK + Aptana Studio 3 plugins) -- it will be copied during the build

LAUNCHER_PLUGIN: The plugin for the equinox launcher at your eclipse version (i.e.: org.eclipse.equinox.launcher_1.1.0.v20100507)

BUILDER_PLUGIN: The plugin for the pde builder at your eclipse version (i.e.: org.eclipse.pde.build_3.6.0.v20100603)

BASEOS: The platform (e.g.: win32, linux, macosx, solaris, etc) 

BASEWS: The windows system (e.g.: win32, gtk, motif, carbon)

BASEARCH: The architechure (e.g.: x86, ppc, sparc)

PATH: python, java, git, ant must be in the path 
    Additionally for Windows, FastCopy (http://ipmsg.org/tools/fastcopy.html.en) is also required.
    
